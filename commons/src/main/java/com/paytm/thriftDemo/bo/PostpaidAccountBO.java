/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.paytm.thriftDemo.bo;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-11-28")
public class PostpaidAccountBO implements org.apache.thrift.TBase<PostpaidAccountBO, PostpaidAccountBO._Fields>, java.io.Serializable, Cloneable, Comparable<PostpaidAccountBO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PostpaidAccountBO");

  private static final org.apache.thrift.protocol.TField ACCOUNT_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("accountNumber", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField FIRST_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("firstName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CUSTOMER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("customerId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField DUE_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("dueAmount", org.apache.thrift.protocol.TType.DOUBLE, (short)4);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new PostpaidAccountBOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new PostpaidAccountBOTupleSchemeFactory();

  public String accountNumber; // required
  public String firstName; // required
  public int customerId; // required
  public double dueAmount; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ACCOUNT_NUMBER((short)1, "accountNumber"),
    FIRST_NAME((short)2, "firstName"),
    CUSTOMER_ID((short)3, "customerId"),
    DUE_AMOUNT((short)4, "dueAmount");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ACCOUNT_NUMBER
          return ACCOUNT_NUMBER;
        case 2: // FIRST_NAME
          return FIRST_NAME;
        case 3: // CUSTOMER_ID
          return CUSTOMER_ID;
        case 4: // DUE_AMOUNT
          return DUE_AMOUNT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CUSTOMERID_ISSET_ID = 0;
  private static final int __DUEAMOUNT_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.DUE_AMOUNT};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ACCOUNT_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("accountNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FIRST_NAME, new org.apache.thrift.meta_data.FieldMetaData("firstName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUSTOMER_ID, new org.apache.thrift.meta_data.FieldMetaData("customerId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "int")));
    tmpMap.put(_Fields.DUE_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("dueAmount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PostpaidAccountBO.class, metaDataMap);
  }

  public PostpaidAccountBO() {
  }

  public PostpaidAccountBO(
    String accountNumber,
    String firstName,
    int customerId)
  {
    this();
    this.accountNumber = accountNumber;
    this.firstName = firstName;
    this.customerId = customerId;
    setCustomerIdIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PostpaidAccountBO(PostpaidAccountBO other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetAccountNumber()) {
      this.accountNumber = other.accountNumber;
    }
    if (other.isSetFirstName()) {
      this.firstName = other.firstName;
    }
    this.customerId = other.customerId;
    this.dueAmount = other.dueAmount;
  }

  public PostpaidAccountBO deepCopy() {
    return new PostpaidAccountBO(this);
  }

  @Override
  public void clear() {
    this.accountNumber = null;
    this.firstName = null;
    setCustomerIdIsSet(false);
    this.customerId = 0;
    setDueAmountIsSet(false);
    this.dueAmount = 0.0;
  }

  public String getAccountNumber() {
    return this.accountNumber;
  }

  public PostpaidAccountBO setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

  public void unsetAccountNumber() {
    this.accountNumber = null;
  }

  /** Returns true if field accountNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountNumber() {
    return this.accountNumber != null;
  }

  public void setAccountNumberIsSet(boolean value) {
    if (!value) {
      this.accountNumber = null;
    }
  }

  public String getFirstName() {
    return this.firstName;
  }

  public PostpaidAccountBO setFirstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  public void unsetFirstName() {
    this.firstName = null;
  }

  /** Returns true if field firstName is set (has been assigned a value) and false otherwise */
  public boolean isSetFirstName() {
    return this.firstName != null;
  }

  public void setFirstNameIsSet(boolean value) {
    if (!value) {
      this.firstName = null;
    }
  }

  public int getCustomerId() {
    return this.customerId;
  }

  public PostpaidAccountBO setCustomerId(int customerId) {
    this.customerId = customerId;
    setCustomerIdIsSet(true);
    return this;
  }

  public void unsetCustomerId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CUSTOMERID_ISSET_ID);
  }

  /** Returns true if field customerId is set (has been assigned a value) and false otherwise */
  public boolean isSetCustomerId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CUSTOMERID_ISSET_ID);
  }

  public void setCustomerIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CUSTOMERID_ISSET_ID, value);
  }

  public double getDueAmount() {
    return this.dueAmount;
  }

  public PostpaidAccountBO setDueAmount(double dueAmount) {
    this.dueAmount = dueAmount;
    setDueAmountIsSet(true);
    return this;
  }

  public void unsetDueAmount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DUEAMOUNT_ISSET_ID);
  }

  /** Returns true if field dueAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetDueAmount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DUEAMOUNT_ISSET_ID);
  }

  public void setDueAmountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DUEAMOUNT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ACCOUNT_NUMBER:
      if (value == null) {
        unsetAccountNumber();
      } else {
        setAccountNumber((String)value);
      }
      break;

    case FIRST_NAME:
      if (value == null) {
        unsetFirstName();
      } else {
        setFirstName((String)value);
      }
      break;

    case CUSTOMER_ID:
      if (value == null) {
        unsetCustomerId();
      } else {
        setCustomerId((Integer)value);
      }
      break;

    case DUE_AMOUNT:
      if (value == null) {
        unsetDueAmount();
      } else {
        setDueAmount((Double)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ACCOUNT_NUMBER:
      return getAccountNumber();

    case FIRST_NAME:
      return getFirstName();

    case CUSTOMER_ID:
      return getCustomerId();

    case DUE_AMOUNT:
      return getDueAmount();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ACCOUNT_NUMBER:
      return isSetAccountNumber();
    case FIRST_NAME:
      return isSetFirstName();
    case CUSTOMER_ID:
      return isSetCustomerId();
    case DUE_AMOUNT:
      return isSetDueAmount();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof PostpaidAccountBO)
      return this.equals((PostpaidAccountBO)that);
    return false;
  }

  public boolean equals(PostpaidAccountBO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_accountNumber = true && this.isSetAccountNumber();
    boolean that_present_accountNumber = true && that.isSetAccountNumber();
    if (this_present_accountNumber || that_present_accountNumber) {
      if (!(this_present_accountNumber && that_present_accountNumber))
        return false;
      if (!this.accountNumber.equals(that.accountNumber))
        return false;
    }

    boolean this_present_firstName = true && this.isSetFirstName();
    boolean that_present_firstName = true && that.isSetFirstName();
    if (this_present_firstName || that_present_firstName) {
      if (!(this_present_firstName && that_present_firstName))
        return false;
      if (!this.firstName.equals(that.firstName))
        return false;
    }

    boolean this_present_customerId = true;
    boolean that_present_customerId = true;
    if (this_present_customerId || that_present_customerId) {
      if (!(this_present_customerId && that_present_customerId))
        return false;
      if (this.customerId != that.customerId)
        return false;
    }

    boolean this_present_dueAmount = true && this.isSetDueAmount();
    boolean that_present_dueAmount = true && that.isSetDueAmount();
    if (this_present_dueAmount || that_present_dueAmount) {
      if (!(this_present_dueAmount && that_present_dueAmount))
        return false;
      if (this.dueAmount != that.dueAmount)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetAccountNumber()) ? 131071 : 524287);
    if (isSetAccountNumber())
      hashCode = hashCode * 8191 + accountNumber.hashCode();

    hashCode = hashCode * 8191 + ((isSetFirstName()) ? 131071 : 524287);
    if (isSetFirstName())
      hashCode = hashCode * 8191 + firstName.hashCode();

    hashCode = hashCode * 8191 + customerId;

    hashCode = hashCode * 8191 + ((isSetDueAmount()) ? 131071 : 524287);
    if (isSetDueAmount())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(dueAmount);

    return hashCode;
  }

  @Override
  public int compareTo(PostpaidAccountBO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAccountNumber()).compareTo(other.isSetAccountNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountNumber, other.accountNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFirstName()).compareTo(other.isSetFirstName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFirstName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.firstName, other.firstName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCustomerId()).compareTo(other.isSetCustomerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustomerId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.customerId, other.customerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDueAmount()).compareTo(other.isSetDueAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDueAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dueAmount, other.dueAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("PostpaidAccountBO(");
    boolean first = true;

    sb.append("accountNumber:");
    if (this.accountNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.accountNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("firstName:");
    if (this.firstName == null) {
      sb.append("null");
    } else {
      sb.append(this.firstName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("customerId:");
    sb.append(this.customerId);
    first = false;
    if (isSetDueAmount()) {
      if (!first) sb.append(", ");
      sb.append("dueAmount:");
      sb.append(this.dueAmount);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PostpaidAccountBOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public PostpaidAccountBOStandardScheme getScheme() {
      return new PostpaidAccountBOStandardScheme();
    }
  }

  private static class PostpaidAccountBOStandardScheme extends org.apache.thrift.scheme.StandardScheme<PostpaidAccountBO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PostpaidAccountBO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ACCOUNT_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountNumber = iprot.readString();
              struct.setAccountNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // FIRST_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.firstName = iprot.readString();
              struct.setFirstNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CUSTOMER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.customerId = iprot.readI32();
              struct.setCustomerIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DUE_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.dueAmount = iprot.readDouble();
              struct.setDueAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PostpaidAccountBO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.accountNumber != null) {
        oprot.writeFieldBegin(ACCOUNT_NUMBER_FIELD_DESC);
        oprot.writeString(struct.accountNumber);
        oprot.writeFieldEnd();
      }
      if (struct.firstName != null) {
        oprot.writeFieldBegin(FIRST_NAME_FIELD_DESC);
        oprot.writeString(struct.firstName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CUSTOMER_ID_FIELD_DESC);
      oprot.writeI32(struct.customerId);
      oprot.writeFieldEnd();
      if (struct.isSetDueAmount()) {
        oprot.writeFieldBegin(DUE_AMOUNT_FIELD_DESC);
        oprot.writeDouble(struct.dueAmount);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PostpaidAccountBOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public PostpaidAccountBOTupleScheme getScheme() {
      return new PostpaidAccountBOTupleScheme();
    }
  }

  private static class PostpaidAccountBOTupleScheme extends org.apache.thrift.scheme.TupleScheme<PostpaidAccountBO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PostpaidAccountBO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetAccountNumber()) {
        optionals.set(0);
      }
      if (struct.isSetFirstName()) {
        optionals.set(1);
      }
      if (struct.isSetCustomerId()) {
        optionals.set(2);
      }
      if (struct.isSetDueAmount()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetAccountNumber()) {
        oprot.writeString(struct.accountNumber);
      }
      if (struct.isSetFirstName()) {
        oprot.writeString(struct.firstName);
      }
      if (struct.isSetCustomerId()) {
        oprot.writeI32(struct.customerId);
      }
      if (struct.isSetDueAmount()) {
        oprot.writeDouble(struct.dueAmount);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PostpaidAccountBO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.accountNumber = iprot.readString();
        struct.setAccountNumberIsSet(true);
      }
      if (incoming.get(1)) {
        struct.firstName = iprot.readString();
        struct.setFirstNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.customerId = iprot.readI32();
        struct.setCustomerIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.dueAmount = iprot.readDouble();
        struct.setDueAmountIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

